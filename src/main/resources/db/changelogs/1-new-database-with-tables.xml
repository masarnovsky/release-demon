<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd
   http://www.liquibase.org/xml/ns/dbchangelog
   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet author="maksim.masarnovsky" id="new-artists-table">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="artists"/>
            </not>
        </preConditions>

        <sql>
            CREATE TABLE artists (
            id BIGINT NOT NULL AUTO_INCREMENT,
            name VARCHAR(255) NOT NULL DEFAULT '',
            mbid VARCHAR(36) DEFAULT NULL,
            PRIMARY KEY (id)
            );
        </sql>

        <rollback>
            <dropTable tableName="artists"/>
        </rollback>
    </changeSet>

    <changeSet author="maksim.masarnovsky" id="new-albums-table">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="albums"/>
            </not>
        </preConditions>

        <sql>
            CREATE TABLE albums (
            id BIGINT NOT NULL AUTO_INCREMENT,
            title VARCHAR(255) NOT NULL DEFAULT '',
            release_date DATE NOT NULL,
            artist_id BIGINT NOT NULL,
            cover VARCHAR(255) DEFAULT NULL,
            mbid VARCHAR(36) DEFAULT NULL,
            type VARCHAR(20) DEFAULT NULL,
            PRIMARY KEY (id),
            FOREIGN KEY (artist_id) REFERENCES artists(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>

        <rollback>
            <dropTable tableName="albums"/>
        </rollback>
    </changeSet>

    <changeSet author="maksim.masarnovsky" id="new-users-table">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="users"/>
            </not>
        </preConditions>

        <sql>
            CREATE TABLE users (
            id BIGINT NOT NULL AUTO_INCREMENT,
            lastfm_username VARCHAR(50) DEFAULT NULL,
            last_synchronized DATETIME DEFAULT NULL,
            updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
            created DATETIME DEFAULT CURRENT_TIMESTAMP,
            telegram_id BIGINT NOT NULL UNIQUE,
            PRIMARY KEY (id)
            );
        </sql>

        <rollback>
            <dropTable tableName="users"/>
        </rollback>
    </changeSet>

    <changeSet author="maksim.masarnovsky" id="new-user-artists-table">
        <preConditions onFail="MARK_RAN">
            <not>
                <tableExists tableName="user_artist"/>
            </not>
        </preConditions>

        <sql>
            CREATE TABLE user_artist (
            id BIGINT NOT NULL AUTO_INCREMENT,
            user_id BIGINT NOT NULL,
            artist_id BIGINT NOT NULL,
            PRIMARY KEY (id),
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE ON UPDATE CASCADE,
            FOREIGN KEY (artist_id) REFERENCES artists(id) ON DELETE CASCADE ON UPDATE CASCADE
            );
        </sql>

        <rollback>
            <dropTable tableName="user_artist"/>
        </rollback>
    </changeSet>

</databaseChangeLog>